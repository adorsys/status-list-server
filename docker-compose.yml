services:
  db:
    image: postgres:15
    container_name: status-list-server-db
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-status-list}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - status-list-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: status-list-server
    environment:
      - SERVER_KEY_SECRET_NAME=${SERVER_KEY_SECRET_NAME}
      - AWS_REGION=${AWS_REGION}
      - SERVER_PUBLIC_DOMAIN=${SERVER_PUBLIC_DOMAIN}
      - DATABASE_URL=postgres://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db/${DB_NAME:-status-list}
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      - status-list-network

networks:
  status-list-network:
    driver: bridge

volumes:
  pgdata:
    driver: local