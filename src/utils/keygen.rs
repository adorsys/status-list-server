use rsa::{RsaPrivateKey, RsaPublicKey};

use super::errors::Error;

pub struct Keypair {
    pub private_key: RsaPrivateKey,
    pub public_key: RsaPublicKey,
}

/// This function should be called once to generate a new keypair
pub fn keygen() -> Result<Keypair, Error> {
    let mut rng = rand::thread_rng();
    let bits = 2048;
    let priv_key = RsaPrivateKey::new(&mut rng, bits)
        .map_err(|_| Error::Generic("failed to generate key".to_string()))?;
    let pub_key = RsaPublicKey::from(&priv_key);

    let keypair = Keypair {
        private_key: priv_key,
        public_key: pub_key,
    };
    Ok(keypair)
}

#[cfg(test)]
mod test {
    use jsonwebtoken::{decode, encode, DecodingKey, EncodingKey, Header, Validation};
    use rsa::pkcs1::{EncodeRsaPrivateKey, EncodeRsaPublicKey};
    use super::keygen;     

    #[test]
    fn test() {
        #[derive(Debug, serde::Deserialize, serde::Serialize)]
        struct Claims {}

        let keypair = keygen().unwrap();
        let header = Header::default();

        let encoding_key =
            EncodingKey::from_rsa_der(keypair.private_key.to_pkcs1_der().unwrap().as_bytes());

        let claims = Claims {};
        let token = encode(&header, &claims, &encoding_key).unwrap();

        // decode and verify signature
        let decoding_key =
            DecodingKey::from_rsa_der(&keypair.public_key.to_pkcs1_der().unwrap().as_bytes());

        let decoded = decode::<Claims>(&token, &decoding_key, &Validation::default()).ok();
        assert!(decoded.is_some());
    }
}

