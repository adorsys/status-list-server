statuslist:
  replicaCount: 1
  image:
    repository: ghcr.io/adorsys/status-list-server
    pullPolicy: Always
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8000
  ingress:
    enabled: true
    path: /
    pathType: Prefix
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    tls:
      hosts:
        - "*.eudi-adorsys.com"
      secretName: statuslist-tls
    externalDnsHostname: statuslist.eudi-adorsys.com
  env:
    RUST_LOG: "info"
    SERVER_KEY_SECRET_NAME: "statuslist-secret"
    POSTGRES_USER: "postgres"
    APP_ENV: "production"
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
postgresql:
  enabled: true
  auth:
    username: "postgres"
    database: "status-list"
    existingSecret: "statuslist-secret"
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: postgres-password
  primary:
    persistence:
      enabled: true
      storageClass: "high-performance"
      size: 10Gi
  service:
    type: ClusterIP
    ports:
      postgresql: 5432
externalSecret:
  metadata:
    name: statuslist-external-secret
  spec:
    refreshInterval: 30m
    secretStoreRef:
      name: statuslist-secret-store
      kind: SecretStore
    target:
      name: statuslist-secret
      creationPolicy: Owner
    data:
      - secretKey: postgres-password
        remoteRef:
          key: statuslist-secret
          property: POSTGRES_PASSWORD
      - secretKey: redis-password
        remoteRef:
          key: statuslist-secret
          property: REDIS_PASSWORD

secretStore:
  aws:
    region: eu-central-1

redis:
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 8.0.3-debian-12-r2
    pullPolicy: IfNotPresent
    debug: true

  auth:
    enabled: true
    existingSecret: "statuslist-secret"
    existingSecretPasswordKey: "redis-password"

  persistence:
    enabled: true
    storageClass: "high-performance"
    accessModes:
      - ReadWriteOnce
    size: 12Gi

  tls:
    enabled: false
    authClients: true
    autoGenerated: false # Set to true if you want auto generated certificate
    existingSecret: "secret holding certificate"

  service:
    type: ClusterIP
    ports:
      redis: 6379
