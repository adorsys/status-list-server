global:
  storageClass: "standard"

statuslist:
  initContainers:
  - name: wait-for-postgres
    image: busybox
    command:
    - "sh"
    - "-c"
    - |
      echo "Waiting for PostgreSQL..."
      until nc -z status-list-postgresql 5432; do
        echo "PostgreSQL not ready. Retrying in 2s...";
        sleep 2;
      done
      echo "PostgreSQL is up."

  - name: wait-for-redis
    image: busybox
    command:
    - "sh"
    - "-c"
    - |
      echo "Waiting for Redis..."
      until nc -z status-list-redis-master 6379; do
        echo "Redis not ready. Retrying in 2s...";
        sleep 2;
      done
      echo "Redis is up."
  replicaCount: 1
  image:
    repository: ghcr.io/adorsys/status-list-server
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8000
  ingress:
    enabled: true
    className: "nginx"
    path: /
    pathType: Prefix
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    host: statuslist.local
    tls:
      enabled: false # Disabled TLS for local testing
  env:
    RUST_LOG: "debug"
    POSTGRES_USER: "postgres"
    APP_ENV: "development"
    APP_SERVER__HOST: "0.0.0.0"
    APP_SERVER__PORT: "8000"
    APP_SERVER__CERT__EMAIL: "test@local.com"
    APP_SERVER__CERT__ORGANIZATION: "Local Testing"
    APP_SERVER__CERT__ACME_DIRECTORY_URL: "https://acme-v02.api.letsencrypt.org/directory"
    APP_SERVER__CERT__EKU: "1,3,6,1,5,5,7,3,30"
    APP_REDIS__REQUIRE_CLIENT_AUTH: "false"
    APP_CACHE__TTL: "300"
    APP_CACHE__MAX_CAPACITY: "1000"
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

postgresql:
  image:
    registry: docker.io
    repository: bitnamilegacy/postgresql
    tag: "17.2.0-debian-12-r0"
  auth:
    username: "postgres"
    database: "status-list"
    existingSecret: "statuslist-secret"
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: postgres-password
  primary:
    persistence:
      enabled: true
      size: 5Gi
  service:
    type: ClusterIP
    ports:
      postgresql: 5432

externalSecret:
  enabled: false
  metadata:
    name: statuslist-external-secret
  spec:
    refreshInterval: 1m
    secretStoreRef:
      name: statuslist-secret-store
      kind: SecretStore
    target:
      name: statuslist-secret
      creationPolicy: Owner
    data:
    - secretKey: postgres-password
      remoteRef:
        key: statuslist-secret
        property: POSTGRES_PASSWORD
    - secretKey: redis-password
      remoteRef:
        key: statuslist-secret
        property: REDIS_PASSWORD
secretStore:
  localstack:
    enabled: true # Enable LocalStack mode
    endpoint: "http://localstack.localstack.svc.cluster.local:4566"
  aws:
    region: us-east-1 # LocalStack typically uses us-east-1
    credentialsSecret: localstack-aws-creds # Reference to LocalStack credentials

redis:
  image:
    registry: docker.io
    repository: bitnamilegacy/redis
    tag: 7.4.1-debian-12-r0
    pullPolicy: IfNotPresent
    debug: true

  auth:
    enabled: true
    existingSecret: "statuslist-secret"
    existingSecretPasswordKey: "redis-password"

  master:
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 2Gi
    service:
      type: ClusterIP
      ports:
        redis: 6379

  replica:
    replicaCount: 0

  tls:
    enabled: false
