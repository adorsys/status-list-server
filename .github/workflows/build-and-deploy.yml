name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*

env:
  IMAGE_NAME: status-list-server
  NAMESPACE: statuslist
  CLUSTER_NAME: datev-wallet-cluster
  AWS_REGION: eu-central-1
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      image_tag: ${{ steps.vars.outputs.SHORT_SHA }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short commit SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}

  deploy-to-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy updated image to Kubernetes
        run: |
          kubectl set image deployment/statuslist-status-list-server-deployment \
            status-list-server=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }} \
            -n ${{ env.NAMESPACE }}
